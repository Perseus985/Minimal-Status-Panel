name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript check
      run: npm run typecheck
      
    - name: Run linting
      run: npm run lint
      
    - name: Run tests
      run: npm run test:ci

  build:
    name: Build Plugin
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build plugin
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: plugin-build-${{ github.sha }}
        path: dist/
        retention-days: 30

  package:
    name: Create Release Package
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build plugin
      run: npm run build
      
    - name: Get version from package.json
      id: version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Create plugin archive
      run: |
        cd dist
        zip -r ../uptime-kuma-status-panel-${{ steps.version.outputs.version }}.zip .
        cd ..
        
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./uptime-kuma-status-panel-${{ steps.version.outputs.version }}.zip
        asset_name: uptime-kuma-status-panel-${{ steps.version.outputs.version }}.zip
        asset_content_type: application/zip

  sign:
    name: Sign Plugin
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.repository_owner != 'grafana'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build plugin
      run: npm run build
      
    - name: Sign plugin
      run: npm run sign
      env:
        GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }}
      if: env.GRAFANA_API_KEY != ''
      
    - name: Get version from package.json
      id: version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Create signed plugin archive
      run: |
        cd dist
        zip -r ../uptime-kuma-status-panel-${{ steps.version.outputs.version }}-signed.zip .
        cd ..
        
    - name: Upload signed release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./uptime-kuma-status-panel-${{ steps.version.outputs.version }}-signed.zip
        asset_name: uptime-kuma-status-panel-${{ steps.version.outputs.version }}-signed.zip
        asset_content_type: application/zip