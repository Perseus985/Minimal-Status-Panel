name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm run test:ci
      
    - name: Build plugin
      run: npm run build
      
    - name: Get version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Create plugin archive
      run: |
        cd dist
        zip -r ../uptime-kuma-status-panel-${{ steps.version.outputs.version }}.zip .
        cd ..
        
    - name: Generate checksums
      run: |
        sha256sum uptime-kuma-status-panel-${{ steps.version.outputs.version }}.zip > checksums.txt
        
    - name: Create Release with Assets
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ github.ref_name }} \
          --title "Release ${{ steps.version.outputs.version }}" \
          --notes "$(cat <<'EOF'
        ## Uptime Kuma Status Panel v${{ steps.version.outputs.version }}
        
        ### 📦 Installation
        
        1. Download the \`uptime-kuma-status-panel-${{ steps.version.outputs.version }}.zip\` file
        2. Extract it to your Grafana plugins directory
        3. Restart Grafana
        4. Enable the plugin in your Grafana configuration
        
        ### ✨ Features
        
        - Beautiful Uptime Kuma-style service status cards
        - Minimal and Full display modes
        - Interactive heartbeat bars with hover timestamps
        - Prometheus instance filtering
        - Real-time data integration
        - Custom service name mapping
        
        ### 🛠️ Requirements
        
        - Grafana 9.0.0 or later
        - Prometheus with Blackbox Exporter (recommended)
        
        ### 📋 Checksums
        
        See the \`checksums.txt\` file for SHA256 checksums.
        EOF
        )" \
          uptime-kuma-status-panel-${{ steps.version.outputs.version }}.zip \
          checksums.txt

  sign:
    name: Sign Plugin (Optional)
    runs-on: ubuntu-latest
    needs: release
    if: secrets.GRAFANA_API_KEY != ''
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build plugin
      run: npm run build
      
    - name: Sign plugin
      run: npm run sign
      env:
        GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }}
        
    - name: Get version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Create signed plugin archive
      run: |
        cd dist
        zip -r ../uptime-kuma-status-panel-${{ steps.version.outputs.version }}-signed.zip .
        cd ..
        
    - name: Generate signed checksums
      run: |
        sha256sum uptime-kuma-status-panel-${{ steps.version.outputs.version }}-signed.zip > checksums-signed.txt
        
    - name: Upload Signed Assets to Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ github.ref_name }} \
          uptime-kuma-status-panel-${{ steps.version.outputs.version }}-signed.zip \
          checksums-signed.txt